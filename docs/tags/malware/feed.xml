
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>Solar Bites</title>
      <link>https://thuri10.github.io/blog</link>
      <description>Bits Flipping Adventures</description>
      <language>en-us</language>
      <managingEditor>thuri783@gmail.com (Thuri10)</managingEditor>
      <webMaster>thuri783@gmail.com (Thuri10)</webMaster>
      <lastBuildDate>Mon, 07 Feb 2022 00:00:00 GMT</lastBuildDate>
      <atom:link href="https://thuri10.github.io/tags/malware/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://thuri10.github.io/blog/redlinerstealer</guid>
    <title>RedLineStealer Information Stealer Analysis</title>
    <link>https://thuri10.github.io/blog/redlinerstealer</link>
    <description>Redline malware is an Information Stealer written in c# , targeting windows victims. It is used for gathering victims information ranging from the Browser cookies, saved credentials, Discord tokens...</description>
    <pubDate>Mon, 07 Feb 2022 00:00:00 GMT</pubDate>
    <author>thuri783@gmail.com (Thuri10)</author>
    <category>malware</category><category>RedlineStealer</category>
  </item>

  <item>
    <guid>https://thuri10.github.io/blog/remcosrat</guid>
    <title>RemcosRat infection chain from excel with Macros</title>
    <link>https://thuri10.github.io/blog/remcosrat</link>
    <description>RemcosRAT is a Fileless multi-stage malware that is distributed through malicious macros in Excel files. The malware enables remote administration of infected systems to perform unintended actions.</description>
    <pubDate>Tue, 25 Jan 2022 00:00:00 GMT</pubDate>
    <author>thuri783@gmail.com (Thuri10)</author>
    <category>Remcos</category><category>rat</category><category>malware</category>
  </item>

  <item>
    <guid>https://thuri10.github.io/blog/strings-malware</guid>
    <title>Static Analysis of Malware Strings</title>
    <link>https://thuri10.github.io/blog/strings-malware</link>
    <description>Strings challenges contains an un-encrypted flag stored within the executable. When run, the program will output an MD5 hash of the flag but not the original. Can you extract the flag?</description>
    <pubDate>Tue, 07 Dec 2021 00:00:00 GMT</pubDate>
    <author>thuri783@gmail.com (Thuri10)</author>
    <category>malware</category><category>reverse</category>
  </item>

  <item>
    <guid>https://thuri10.github.io/blog/virtual-machine</guid>
    <title>Reversing MalwareTech 8-bit Bytecode Virtual Machine</title>
    <link>https://thuri10.github.io/blog/virtual-machine</link>
    <description>Can you figure out how the VM works and write your own to decrypt the flag?</description>
    <pubDate>Tue, 07 Dec 2021 00:00:00 GMT</pubDate>
    <author>thuri783@gmail.com (Thuri10)</author>
    <category>reverse</category><category>malware</category>
  </item>

    </channel>
  </rss>
