{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var p=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),g=(e,t)=>{for(var r in t)s(e,r,{get:t[r],enumerable:!0})},c=(e,t,r,a)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of u(t))!m.call(e,i)&&i!==r&&s(e,i,{get:()=>t[i],enumerable:!(a=h(t,i))||a.enumerable});return e};var f=(e,t,r)=>(r=e!=null?d(b(e)):{},c(t||!e||!e.__esModule?s(r,\"default\",{value:e,enumerable:!0}):r,e)),j=e=>c(s({},\"__esModule\",{value:!0}),e);var l=p((v,o)=>{o.exports=_jsx_runtime});var k={};g(k,{default:()=>_,frontmatter:()=>x});var n=f(l()),x={title:\"Reversing C++ - Objects Creation\",date:\"2022-07-16\",tags:[\"reverse\",\"c++\",\"ost2\"],draft:!0,summary:\"Reversing C++ Objects\",images:[\"/static/images/ost2/animal.png\"],layout:\"PostLayout\",canonicalUrl:null};function y(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(r,{})})):r();function r(){let a=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",blockquote:\"blockquote\",p:\"p\",code:\"code\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.h2,{id:\"basic-c-objects\",children:[(0,n.jsx)(a.a,{href:\"#basic-c-objects\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(a.span,{className:\"icon icon-link\"})}),\"Basic C++ Objects\"]}),(0,n.jsxs)(a.h2,{id:\"the-animal-lab\",children:[(0,n.jsx)(a.a,{href:\"#the-animal-lab\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(a.span,{className:\"icon icon-link\"})}),\"The Animal Lab\"]}),(0,n.jsx)(a.blockquote,{children:(0,n.jsx)(a.p,{children:\"In this exercise you would need to reverse engineer a binary and understand the structure of an object using analysis of its constructor. Your first task is to find the constructor of the object. Afterwards, analyze the constructor to understand the object structure, including its members and their names and create a struct in IDA.\"})}),(0,n.jsxs)(a.p,{children:[\"The binary of the exercise can be downloaded from following URL \",(0,n.jsx)(a.a,{href:\"https://gitlab.com/opensecuritytraining/re3011_cpp_re_binaries/-/blob/main/TheAnimal\",children:\"The animal Lab\"})]}),(0,n.jsxs)(a.p,{children:[\"NB: \",(0,n.jsx)(a.code,{children:\"Decompilers are not permitted, please use only static reverse engineering during this lab.\"})]})]})}}var _=y;return j(k);})();\n;return Component;","toc":[{"value":"Basic C++ Objects","url":"#basic-c-objects","depth":2},{"value":"The Animal Lab","url":"#the-animal-lab","depth":2}],"frontMatter":{"readingTime":{"text":"1 min read","minutes":0.605,"time":36300,"words":121},"slug":"reversing-c-objects-creation","fileName":"reversing-c-objects-creation.mdx","title":"Reversing C++ - Objects Creation","date":"2022-07-16","tags":["reverse","c++","ost2"],"draft":true,"summary":"Reversing C++ Objects","images":["/static/images/ost2/animal.png"],"layout":"PostLayout","canonicalUrl":null}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.53,"time":31800,"words":106},"slug":["default"],"fileName":"default.md","name":"Thuri","avatar":"/static/images/profile.png","occupation":"Software Developer","email":"thuri783@gmail.com","github":"https://github.com/thuri10"}],"prev":{"title":"Reversing c++ - Basic Templates","date":"2022-07-16T00:00:00.000Z","tags":["Reverse","OpenSecurity","c++"],"draft":false,"summary":"C++ Basic Templates","images":"/static/images/ost2/basictemplates.png","layout":"PostLayout","canonicalUrl":null,"slug":"reversing-c-basic-templates"},"next":null},"__N_SSG":true}